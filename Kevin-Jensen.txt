




    1.What is Semantic HTML?
    	Semantic HTML is when tags’ intended purpose becomes a way to tell a machine something about the meaning of the content.

    2.What is HTML used for? 
    	HTML stands for Hyper Text Markup Language and is used to “Markup” a webpage using tags. It’s heavily used as “HTML5” and currently dominates the internet. Links can be easily embedded which makes maneuverability/navigation a breeze. Each document is spread out into three distinct parts called the “title,” “header” and “body.” Within those parts are the contents of how nearly every website is supposed to look. HTML is used as the basic building blocks of the internet. I’ve heard it compared to the frame of a house, in that metaphor where CSS is the paint/décor and Javascript is the running water/electricity; and for good reason – it works. 

    3.What is an attribute and where do we put it? 
    	Attributes describe html tags and we put them after the element and a space.

    4.What is the h1 tag used for? 
    	How many times should I use it on a page?  The h1 tag is used to define the most important heading. It is also used to identify the title of articles. It is the largest tag out of the 6 of them. It should only be used once.

    5. Name two tags that have required attributes
	The image attribute “<img>” requires the source attribute: “src.” The hyperlink tag “<a>” requires an attribute, the one we’ve used thus far is “href” – which specifies the URL of the page the link goes to.

    6. What do we put in the head of our HTML document? 
	In the head of our HTML document we would put the head elements which are: document title, character set, styles, scripts and other meta information.
	
    7. What is an id? 
	The id is an attribute that specifies an HTML element and the value must be unique within the document.

    8. What elements can I add an id to? 
	The id attribute can be used on any HTML element.

    9. How many times can I use the same id on a page?
	An id should only be used once because the value specifies a unique element within the document. 

    10. What is a class? 
	 The class attribute is used to define the same styles for elements with that class name. The class name is written in dot notation like this: “.class”

    11. What elements can I add a class to? 
	 Any element can have a class added.

    12. How many times can I use the same class on a page?
	 You can use the same class multiple times to specify the same style for multiple elements. 

    13. How do I get my link to open in a new tab?
	 You can get any link to open in a new tab by adding “target=_blank” to the <a> element attributes.

    14. What is the alt attribute used for? 
	 The alt attribute is alternate text for an image that will be displayed by the browser in case the image is not found.

    15. How do I reference an id?
	 You reference an id by writing the “#” hash character, followed by the id of the element.

    16. What is the difference between a section and a div?
	 A section tag tells the machine to separate sections in a document such as headers, paragraphs, footers. The div tag similarly defines a section in the document but is often used as a container to make HTML elements do things like style them with CSS or perform tasks in JS.

    17. What is CSS used for? 
	 If HTML, CSS and JS were a complete house then CSS would be the style of the house. The décor, paint, everything you see that is the styling that makes up the house.

    18. How do we select an element? Example - every h2 on the page
         You can select an element in CSS by simply writing the element as it’s shown in HTML with no “<>” and adding “{}” along with styling information in between the “{}” brackets.

    19. What is the difference between a class and an id? - Give me an example of when I might use each one.
         The difference between a class and id is that one holds weight over the other. An id will override a class in CSS. The other difference is in how they are used. An id is used to describe one element on a document while class selectors can be used to describe the styling of multiple elements. An example of an id being used once in a document is when it is used to point to a style in a style sheet. Class selectors are used in CSS to change colors of fonts and all sorts of other styling as well.

    20. How do we select classes in CSS?
	 In CSS you can select a class by writing the name of the class in dot notation “.class” and then “{}” and the info about styling goes in between the brackets.

    21. How do we select a p element with a single class of “human””?
	 .human {}

    22. What is a parent child selector? When would this be useful? 
	 The parent child selector selects all elements that are a direct child of the specified element. A basic example of this is if you wanted to select every h2 element within a div you could write “div > h2” and the h2 elements not within a div would not be selected.

    23. How do you select all links within a div with the class of sidebar?
	 “div > .sidebar”

    24. What is a pseudo selector?
	 Pseudo selectors define a special state of an element. For example the :hover pseudo class style an element when your mouse hovers over it.

    25. What do we use to change the spacing between lines?
	 We use the “Line-Height” attribute and set a value to change the spacing between lines.

    26. What do we use to change the spacing between letters?
	 We use the “letter-spacing” attribute and set a value to change the spacing between letters.

    27. What do we use to to change everything to CAPITALS? 
        lowercase? Capitalize?
	 We use the “Text-transform” property to do all three. Write in “uppercase” to capitalize, “lowercase” to do lowercase, and “capitalize” to change it to all caps.

    28. How do I add a 1px border around my div that is dotted and black?
	 div {
		border-width: 1px;
		border-style: dotted;
		border-color: black;
		}

    29. How do I select everything on the page?
	 You use the * asterisk followed by the brackets “{}” of course. 

    30. How do I write a comment in CSS?
	 You write in-line comments using “\\” or multi-line comments by opening the comment with: “/*” and closing it with: “*/”

    31. How do I find out what file I am in, when I am using the command line? 
	 You can use the “ls” command to list the file structure of where you are.

    32. Using the command line - how do I see a list of files/folders in my current folder?
	 The “ls” command lists this.

    33. How do I remove a file via the command line? Why do I have to be careful with this? 
	 You remove a file using the command: “rm” followed by the name of the file. The reason you should be careful when doing this is because these files get deleted directly and as soon as you press enter they are lost forever. There is no recycling bin to retrieve them from so you don’t want to accidentally delete something important permanently.

    34. Why should I use version control? 
	 Version control is the industry standard. It is used by the companies where I want to work. It allows teams to access changes to a file every step of the way and access each individuals changes as well.  It’s a perfect tool to work as a team on a large project while maintaining valuable input from all team members along the way.

    35. How often should I commit to github?
	 You commit to github once a day when your assignment is finished and make sure to assign your TL or PM as a reviewer so they can review your code.

    36. What is the command we would use to push our repo up to github? 
	 To push our repo up to github we would use the “git push –u origin branch-name” command.

    37. Walk me through Lambda's git flow. 
	1. Fork your work.
	2. Add TL as collaborator.
	3. Clone repo by copying link.
	4. In CLI (Command Line Interface) use “cd” command to go to directory where you want to clone your forked repo.
	5. Use the “git clone” command and paste the link after it.
	6. “cd” command into the newly created repo.
	7. Use the “git checkout –b ‘Kevin-Jensen’” command to create your own branch name for the repo.
	8. Use the “git add .” command to add repo changes and make them ready for committing. 
	9. Use “git commit –m “Your commit message here”” to commit the changes with commit message explaining what you did.
	10. Use “git push –u origin branch-name” to push all of your commits from your local machine onto github.
	11. Go back to your forked project repo on github
	12. Click on the “Branch:master” button on the left and click your name branch.
	13. Click “New pull request” button to make a pull request on your name branch.
	14. Click the dropdown button that says “Base repository” and change it to be your Forked Repository.
	15. Add your TL to the Reviewers and then submit the pull request.
 


Stretch Questions

1.	What is the difference between an inline element and a block element?
An inline element only takes up as much width as necessary while a block element starts on a new line and takes up the entire width available. An example of an inline element is the link tag <a> which adds a link within a block of code. Block elements are used for “containers” of code in the case of <div> or <section> and represent blocks of code.


2.	What happens when an element is positioned absolutely? 


3.	How do I make an element take up only the amount of space it needs but also have the ability to give it a width? 

4.	Name 3 elements that are display block by default, 2 elements that are display inline by default and 1 element that is display inline-block by default


    5. In your own words, explain the box model. What is the fix for the box model?
